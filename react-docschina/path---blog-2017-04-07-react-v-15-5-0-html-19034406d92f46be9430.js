webpackJsonp([0x84896bddc2f6],{810:function(a,s){a.exports={data:{markdownRemark:{html:'<p>自上次更新React已经是一年前了。我们下一次的重要发布，React 16，将包含一些让人兴奋的提升，包含一个<a href="https://www.youtube.com/watch?v=ZCuYPiUIONs">完全重写</a>的React内核。<a href="/react/contributing/design-principles.html#stability">我们认真考虑了稳定性</a>，并致力于以最小的改动将这些特性带给我们的用户。</p>\n<p>最后，我们发布了React 15.5.0。</p>\n<h3 id="新的弃用警告"><a href="#%E6%96%B0%E7%9A%84%E5%BC%83%E7%94%A8%E8%AD%A6%E5%91%8A" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>新的弃用警告</h3>\n<p>最大的改变是我们将<code class="gatsby-code-text">React.PropTypes</code>和<code class="gatsby-code-text">React.createClass</code> 移到他们的自己的包。二者仍然可以通过主要的<code class="gatsby-code-text">React</code>独享访问，但是在开发模式下，使用其中的一个将在控制台上打印一个过时的弃用警告。这将会让之后代码大小有所优化。</p>\n<p>这些警告并不会影响你的应用行为。然而，我们意识到他们可能会造成一些困惑，尤其是你使用的测试框架将<code class="gatsby-code-text">console.error</code>视为失败时。</p>\n<p><strong>添加新警告并不是我们轻易做的。</strong> 警告在React中不仅仅是建议 - 它们是我们能够让尽可能多地人使用最新版React的策略的组成部分。我们从不在不增加路径的情况下增加警告。</p>\n<p>因此，当警告可能在短期内造成困惑，我们相信<strong>能刺激开发者在当前迁移代码库而防止在未来产生更大困惑</strong>。提前修复警告确保你已为下一个重要发布做好了准备。若你的应用在15.5时产生了0个警告，那么在16中应该能够继续工作而无需任何改变。</p>\n<p>关于每一项新的弃用，我们已经提供了一份代码修改（codemod）以自动迁移你的代码。它们已可以利用来作为 <a href="https://github.com/reactjs/react-codemod">react-codemod</a>项目的部分。</p>\n<h3 id="从reactproptypes迁移"><a href="#%E4%BB%8Ereactproptypes%E8%BF%81%E7%A7%BB" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>从React.PropTypes迁移</h3>\n<p>属性类型是用于在开发期间对属性进行运行时校验的一项特性。我们已将内建的属性类型提取到一个独立的包中以反映是否并非每个人都会使用的事实。</p>\n<p>在15.5中，不再是从<code class="gatsby-code-text">React</code>主对象中访问 <code class="gatsby-code-text">PropTypes</code> ，而是安装<code class="gatsby-code-text">prop-types</code>包并从中引入他们：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// Before (15.4 and below)</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Component</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nComponent<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n<span class="gatsby-highlight-code-line">  text<span class="token punctuation">:</span> React<span class="token punctuation">.</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n</span><span class="token punctuation">}</span>\n\n<span class="token comment">// After (15.5)</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="gatsby-highlight-code-line"><span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">\'prop-types\'</span><span class="token punctuation">;</span>\n</span>\n<span class="token keyword">class</span> <span class="token class-name">Component</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nComponent<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n<span class="gatsby-highlight-code-line">  text<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>对于这一改变，<a href="https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types">codemo</a> 自动处理这一转换。基础用法：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code class="gatsby-code-bash">jscodeshift -t react-codemod/transforms/React-PropTypes-to-prop-types.js <span class="token operator">&lt;</span>path<span class="token operator">></span>\n</code></pre>\n      </div>\n<p> <code class="gatsby-code-text">propTypes</code>， <code class="gatsby-code-text">contextTypes</code> 和 <code class="gatsby-code-text">childContextTypes</code>仍将和以前一样。唯一的改变是以前内建的的验证器现在位于独立的包内。</p>\n<p>你也可能考虑使用 <a href="https://flow.org/">Flow</a>来静态地检查你的JavaScript代码类型，包括<a href="https://flow.org/en/docs/frameworks/react/#setup-flow-with-react-a-classtoc-idtoc-setup-flow-with-react-hreftoc-setup-flow-with-reacta">React 组件</a>.</p>\n<h3 id="从reactcrateclass迁移"><a href="#%E4%BB%8Ereactcrateclass%E8%BF%81%E7%A7%BB" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>从React.crateClass迁移</h3>\n<p>当React首次发布时，在JavaScript中并没有通用的方式创建类，因此我们提供我们一个自定义方法：<code class="gatsby-code-text">React.createClass</code>。</p>\n<p>而后，类被添加进该语言中作为ES2015的一部分，因此我们增加了使用JavaScript的类来创建React组件的能力。<strong>与函数式组件一起，JavaScript类现在都是<a href="/react/docs/components-and-props.html#functional-and-class-components">在React创建组件的首选方式</a>。</strong></p>\n<p>对于已经存在的 <code class="gatsby-code-text">createClass</code> 组件，我们建议你将它们迁移到JavaScript类。然而，若你的组件依赖于混合（mixins），迁移至类可能不会立即可行。若是如此，<code class="gatsby-code-text">create-react-class</code> 作为一个顺带的替换方案已在npm上可用：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// Before (15.4 and below)</span>\n<span class="token keyword">var</span> React <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'react\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="gatsby-highlight-code-line"><span class="token keyword">var</span> Component <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n</span>  mixins<span class="token punctuation">:</span> <span class="token punctuation">[</span>MixinA<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// After (15.5)</span>\n<span class="token keyword">var</span> React <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'react\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="gatsby-highlight-code-line"><span class="token keyword">var</span> createReactClass <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'create-react-class\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span>\n<span class="gatsby-highlight-code-line"><span class="token keyword">var</span> Component <span class="token operator">=</span> <span class="token function">createReactClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n</span>  mixins<span class="token punctuation">:</span> <span class="token punctuation">[</span>MixinA<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>你的组件仍然能够和之前一样继续工作。</p>\n<p>对于这一变化，<a href="https://github.com/reactjs/react-codemod#explanation-of-the-new-es2015-class-transform-with-property-initializers">codemo</a> 尝试转换<code class="gatsby-code-text">createClass</code>组件为一个JavaScript类，并在必要时回退到<code class="gatsby-code-text">create-react-class</code>。该方案已处理了Facebook内部数千计的组件。</p>\n<p>基本用法：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code class="gatsby-code-bash">jscodeshift -t react-codemod/transforms/class.js path/to/components\n</code></pre>\n      </div>\n<h3 id="不再支持的react附件"><a href="#%E4%B8%8D%E5%86%8D%E6%94%AF%E6%8C%81%E7%9A%84react%E9%99%84%E4%BB%B6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>不再支持的React附件</h3>\n<p>我们将停止维护React附件包。真实地，大多数包已经有很长时间没有维护了。它们仍将持续继续工作，但我们建议尽快迁移以防止将来的破坏。</p>\n<ul>\n<li><strong>react-addons-create-fragment</strong> - React 16将优先支持碎片，在这点上该包已不再必要。我们推荐使用键控元素的数组。</li>\n<li><strong>react-addons-css-transition-group</strong>。使用<a href="https://github.com/reactjs/react-transition-group">react-transition-group/CSSTransitionGroup</a>。1.1.1版本提供了插入式的替代方案。</li>\n<li><strong>react-addons-linked-state-mixin</strong> 直接设置<code class="gatsby-code-text">value</code>和<code class="gatsby-code-text">onChange</code>处理器</li>\n<li><strong>react-addons-pure-render-mixin</strong> - 使用<a href="/react/docs/react-api.html#react.purecomponent"><code class="gatsby-code-text">React.PureComponent</code></a>。</li>\n<li><strong>react-addons-shallow-compare</strong> - 使用<a href="/react/docs/react-api.html#react.purecomponent"><code class="gatsby-code-text">React.PureComponent</code></a>。</li>\n<li><strong>react-addons-transition-group</strong> 使用<a href="https://github.com/reactjs/react-transition-group">react-transition-group/TransitionGroup</a>。1.1.1版本提供了一个插入式的替代方案。</li>\n<li><strong>react-addons-update</strong> - 使用<a href="https://github.com/kolodny/immutability-helper">immutability-helper</a>，一个插入式替代方案。</li>\n<li><strong>react-linked-input</strong> - 直接设置<code class="gatsby-code-text">value</code>和<code class="gatsby-code-text">onChange</code>处理器。</li>\n</ul>\n<p>我们也放弃对于<code class="gatsby-code-text">react-with-addons</code>UMD构建的支持。其将在React 16中被移除。</p>\n<h3 id="react测试套件"><a href="#react%E6%B5%8B%E8%AF%95%E5%A5%97%E4%BB%B6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React测试套件</h3>\n<p>当前，React 测试套件位于<code class="gatsby-code-text">react-addons-test-utils</code>内。在15.5中，我们将其从包中独立出去，并将它们迁移至<code class="gatsby-code-text">react-dom/test-utils</code>：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// Before (15.4 and below)</span>\n<span class="token keyword">import</span> TestUtils <span class="token keyword">from</span> <span class="token string">\'react-addons-test-utils\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// After (15.5)</span>\n<span class="token keyword">import</span> TestUtils <span class="token keyword">from</span> <span class="token string">\'react-dom/test-utils\'</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>这反应了我们所说的测试套件实际上是一套包装了DOM渲染器的API。</p>\n<p>浅渲染是一个例外，其并不是DOM规范。浅渲染器已被移至<code class="gatsby-code-text">react-test-renderer/shallow</code>。</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// Before (15.4 and below)</span>\n<span class="gatsby-highlight-code-line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-addons-test-utils\'</span><span class="token punctuation">;</span>\n</span>\n<span class="token comment">// After (15.5)</span>\n<span class="gatsby-highlight-code-line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-test-renderer/shallow\'</span><span class="token punctuation">;</span>\n</span></code></pre>\n      </div>\n<hr>\n<h2 id="感谢"><a href="#%E6%84%9F%E8%B0%A2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>感谢</h2>\n<p>特别感谢这些人转让npm包名称的所有权：</p>\n<ul>\n<li><a href="https://github.com/developit">Jason Miller</a></li>\n<li><a href="https://github.com/aackerman">Aaron Ackerman</a></li>\n<li><a href="https://github.com/viniciusmarson">Vinicius Marson</a></li>\n</ul>\n<hr>\n<h2 id="安装"><a href="#%E5%AE%89%E8%A3%85" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>安装</h2>\n<p>我们推荐使用<a href="https://yarnpkg.com/">Yarn</a>或<a href="https://www.npmjs.com/">npm</a>来管理前端依赖。若你是初次接触包管理器，<a href="https://yarnpkg.com/en/docs/getting-started">Yarn documentation</a>是一个不错的起点。</p>\n<p>通过Yarn安装React，运行：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code class="gatsby-code-bash">yarn add react@^15.5.0 react-dom@^15.5.0\n</code></pre>\n      </div>\n<p>通过npm安装React，运行：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code class="gatsby-code-bash"><span class="token function">npm</span> <span class="token function">install</span> --save react@^15.5.0 react-dom@^15.5.0\n</code></pre>\n      </div>\n<p>我们推荐如<a href="https://webpack.js.org/">webpack</a> 或 <a href="http://browserify.org/">Browserify</a>打包器，以让你可以编写模块化代码并将其打包到一起放在一个小的包内以优化加载时间。</p>\n<p>记住默认情况下，React在开发模式下运行会带有额外检查并提供有用的警告。当部署你的应用时，确保其<a href="/react/docs/installation.html#development-and-production-versions">在生产模式编译</a>。</p>\n<p>万一你未使用打包器，我们也提供了一个预先构建好的包在npm上，你可以在你的页面中<a href="/react/docs/installation.html#using-a-cdn">通过script标签引入</a>。</p>\n<ul>\n<li><strong>React</strong><br>\n带警告的开发版本：<a href="https://unpkg.com/react@15.5.0/dist/react.js">react/dist/react.js</a><br>\n用于生产的压缩版本：<a href="https://unpkg.com/react@15.5.0/dist/react.min.js">react/dist/react.min.js</a>  </li>\n<li><strong>React with Add-Ons</strong><br>\n带警告的开发版本：<a href="https://unpkg.com/react@15.5.0/dist/react-with-addons.js">react/dist/react-with-addons.js</a><br>\n用于生产的压缩版本：<a href="https://unpkg.com/react@15.5.0/dist/react-with-addons.min.js">react/dist/react-with-addons.min.js</a>  </li>\n<li><strong>React DOM</strong> (在React DOM之前引入React)<br>\n带警告的开发版本：<a href="https://unpkg.com/react-dom@15.5.0/dist/react-dom.js">react-dom/dist/react-dom.js</a><br>\n用于生产的压缩版本：<a href="https://unpkg.com/react-dom@15.5.0/dist/react-dom.min.js">react-dom/dist/react-dom.min.js</a>  </li>\n<li><strong>React DOM Server</strong> (React DOM Server之前引入React)<br>\n带警告的开发版本：<a href="https://unpkg.com/react-dom@15.5.0/dist/react-dom-server.js">react-dom/dist/react-dom-server.js</a><br>\n用于生产的压缩版本：<a href="https://unpkg.com/react-dom@15.5.0/dist/react-dom-server.min.js">react-dom/dist/react-dom-server.min.js</a></li>\n</ul>\n<p>我们还在npm上发布了<code class="gatsby-code-text">react</code>，<code class="gatsby-code-text">react-dom</code>及附件包的<code class="gatsby-code-text">15.5.0</code>版本以及在bower上的<code class="gatsby-code-text">react</code>包。</p>\n<hr>\n<h2 id="修改日志"><a href="#%E4%BF%AE%E6%94%B9%E6%97%A5%E5%BF%97" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>修改日志</h2>\n<h2 id="1550-april-7-2017"><a href="#1550-april-7-2017" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>15.5.0 (April 7, 2017)</h2>\n<h3 id="react"><a href="#react" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React</h3>\n<ul>\n<li>为<code class="gatsby-code-text">React.createClass</code>增加一个独立的警告。将用户指向create-react-class。（<a href="https://github.com/acdlite">@acdlite</a> 在 <a href="https://github.com/facebook/react/commit/d9a4fa4f51c6da895e1655f32255cf72c0fe620e">d9a4fa4</a>的提交）</li>\n<li>为<code class="gatsby-code-text">React.PropTypes</code>增加一个独立的警告。将用户指向prop-types。（<a href="https://github.com/acdlite">@acdlite</a> 在 <a href="https://github.com/facebook/react/commit/043845ce75ea0812286bbbd9d34994bb7e01eb28">043845c</a>的提交）</li>\n<li>修复同时使用<code class="gatsby-code-text">ReactDOM</code>和<code class="gatsby-code-text">ReactDOMServer</code>。（<a href="https://github.com/wacii">@wacii</a> 在 <a href="https://github.com/facebook/react/pull/9005">#9005</a>提的PR）</li>\n<li>修复关于Closure Compiler的问题。（<a href="https://github.com/Shastel">@Shastel</a> 在 <a href="https://github.com/facebook/react/pull/8882">#8882</a>提的PR）</li>\n<li>另一个关于Closure Compiler的修复。（<a href="https://github.com/Shastel">@Shastel</a> 在 <a href="https://github.com/facebook/react/pull/8882">#8882</a>提的PR）</li>\n<li>为无效的元素类型警告增加组件栈信息。（<a href="https://github.com/n3tr">@n3tr</a> 在 <a href="https://github.com/facebook/react/pull/8495">#8495</a>提的PR）</li>\n</ul>\n<h3 id="react-dom"><a href="#react-dom" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React DOM</h3>\n<ul>\n<li>修正当在数字输入中回退时的Chrome bug。(<a href="https://github.com/nhunzaker">@nhunzaker</a> 在 <a href="https://github.com/facebook/react/pull/7359">#7359</a>提的PR)</li>\n<li>增加<code class="gatsby-code-text">react-dom/test-utils</code>，暴露React测试套件。(<a href="https://github.com/bvaughn">@bvaughn</a>)</li>\n</ul>\n<h3 id="react-test-renderer"><a href="#react-test-renderer" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React Test Renderer</h3>\n<ul>\n<li>修复子组件不会调用<code class="gatsby-code-text">componentWillUnmount</code>。（<a href="https://github.com/gre">@gre</a> 在 [#8512](<a href="https://github.com/facebook/react/pull/8512">https://github.com/facebook/react/pull/8512</a>]提的PR）</li>\n<li>增加 <code class="gatsby-code-text">react-test-renderer/shallow</code>，暴露浅渲染器。</li>\n</ul>\n<h3 id="react-addons"><a href="#react-addons" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React Addons</h3>\n<ul>\n<li>最后一次发布附件；他们将不再被维护</li>\n<li>移除<code class="gatsby-code-text">peerDependencies</code>以让附件能够无限期继续工作。（<a href="https://github.com/acdlite">@acdlite</a> 和 <a href="https://github.com/bvaughn">@bvaughn</a> 在 <a href="https://github.com/facebook/react/commit/8a06cd7a786822fce229197cac8125a551e8abfa">8a06cd7</a> 和 <a href="https://github.com/facebook/react/commit/67a8db3650d724a51e70be130e9008806402678a">67a8db3</a>的提交）</li>\n<li>更新以移除<code class="gatsby-code-text">React.createClass</code> 和 <code class="gatsby-code-text">React.PropTypes</code> 的引用。（<a href="https://github.com/acdlite">@acdlite</a> 在 <a href="https://github.com/facebook/react/commit/12a96b94823d6b6de6b1ac13bd576864abd50175">12a96b9</a>的提交）</li>\n<li><code class="gatsby-code-text">react-addons-test-utils</code>被移除。使用<code class="gatsby-code-text">react-dom/test-utils</code> 和 <code class="gatsby-code-text">react-test-renderer/shallow</code> 代替。（<a href="https://github.com/bvaughn">@bvaughn</a>）</li>\n</ul>',excerpt:"自上次更新React已经是一年前了。我们下一次的重要发布，React 16，将包含一些让人兴奋的提升，包含一个 完全重写 的React内核。 我们认真考虑了稳定性 ，并致力于以最小的改动将这些特性带给我们的用户。 最后，我们发布了React 15.5.0。 新的弃用警告 最大的改变是我们将 和  移到他们的自己的包。二者仍然可以通过主要的 独享访问，但是在开发模式下，使用其中的一个将在控制台上打印一个过时的弃用警告。这将会让之后代码大小有所优化。 这些警告并不会影响你的应用行为。然而，我们意识到他们可能会造成一些困惑，尤其是你使用的测试框架将 视为失败时。 添加新警告并不是我们轻易做的。  警告在React中不仅仅是建议 - 它们是我们能够让尽可能多地人使用最新版React的策略的组成部分。我们从不在不增加路径的情况下增加警告。 因此，当警告可能在短期内造成困惑，我们相信 能刺激开发者在当前迁移代码库而防止在未来产生更大困惑 。提前修复警告确保你已为下一个重要发布做好了准备。若你的应用在15.5时产生了0个警告，那么在1…",frontmatter:{title:"React v15.5.0",next:null,prev:null,author:[{frontmatter:{name:"Andrew Clark",url:"https://twitter.com/acdlite"}}]},fields:{date:"April 07, 2017",path:"blog/2017-04-07-react-v15.5.0.md",slug:"/blog/2017/04/07/react-v15.5.0.html"}},allMarkdownRemark:{edges:[{node:{frontmatter:{title:"React v16.7: No, This Is Not the One With Hooks"},fields:{slug:"/blog/2018/12/19/react-v-16-7.html"}}},{node:{frontmatter:{title:"React 16.x Roadmap"},fields:{slug:"/blog/2018/11/27/react-16-roadmap.html"}}},{node:{frontmatter:{title:"React Conf recap: Hooks, Suspense, and Concurrent Rendering"},fields:{slug:"/blog/2018/11/13/react-conf-recap.html"}}},{node:{frontmatter:{title:"React v16.6.0: lazy, memo and contextType"},fields:{slug:"/blog/2018/10/23/react-v-16-6.html"}}},{node:{frontmatter:{title:"Create React App 2.0: Babel 7, Sass, and More"},fields:{slug:"/blog/2018/10/01/create-react-app-v2.html"}}},{node:{frontmatter:{title:"Introducing the React Profiler"},fields:{slug:"/blog/2018/09/10/introducing-the-react-profiler.html"}}},{node:{frontmatter:{title:"React v16.4.2: Server-side vulnerability fix"},fields:{slug:"/blog/2018/08/01/react-v-16-4-2.html"}}},{node:{frontmatter:{title:"You Probably Don't Need Derived State"},fields:{slug:"/blog/2018/06/07/you-probably-dont-need-derived-state.html"}}},{node:{frontmatter:{title:"React v16.4.0: Pointer Events"},fields:{slug:"/blog/2018/05/23/react-v-16-4.html"}}},{node:{frontmatter:{title:"React v16.3.0: New lifecycles and context API"},fields:{slug:"/blog/2018/03/29/react-v-16-3.html"}}}]}},pathContext:{slug:"/blog/2017/04/07/react-v15.5.0.html"}}}});
//# sourceMappingURL=path---blog-2017-04-07-react-v-15-5-0-html-19034406d92f46be9430.js.map