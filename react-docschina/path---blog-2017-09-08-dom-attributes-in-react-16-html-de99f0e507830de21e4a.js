webpackJsonp([0xa62eae39b787],{815:function(a,s){a.exports={data:{markdownRemark:{html:'<p>过去，React 习惯于忽视未知的 DOM 属性。若你在 JSX 中写了一个 React 无法识别的元素， React 将会忽略他。例如这样：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// Your code:</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">mycustomattribute</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>something<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>在 React 15 中将会在 DOM 节点中渲染一个空的 div:</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// React 15 output:</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>在 React 16 中，我们做了一些改变。未知特性会在 DOM 节点的末尾：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// React 16 output:</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">mycustomattribute</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>something<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<h2 id="为何要改变？"><a href="#%E4%B8%BA%E4%BD%95%E8%A6%81%E6%94%B9%E5%8F%98%EF%BC%9F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>为何要改变？</h2>\n<p>React 为 DOM 提供了以 JavaScript 为核心的 API。由于 React 组件总是带有自定义以及 DOM 相关的 props，其使得 React 使用小驼峰命名会更易理解，类似于 DOM 的 API：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">tabIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>这并未改变。然而，过去这一方式强制我们在库中维护一个合法的 DOM 元素白名单：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// ...</span>\nsummary<span class="token punctuation">:</span> <span class="token string">\'summary\'</span><span class="token punctuation">,</span>\ntabIndex<span class="token punctuation">:</span> <span class="token string">\'tabindex\'</span>\ntarget<span class="token punctuation">:</span> <span class="token string">\'target\'</span><span class="token punctuation">,</span>\ntitle<span class="token punctuation">:</span> <span class="token string">\'title\'</span><span class="token punctuation">,</span>\n<span class="token comment">// ...</span>\n</code></pre>\n      </div>\n<p>这一方是有两个弊端：</p>\n<ul>\n<li>\n<p>你无法<a href="https://github.com/facebook/react/issues/140">传自定义属性</a>。而这对于未标准化的浏览器相关的属性，尝试新的DOM API以及集成一些独特的第三方库。</p>\n</li>\n<li>\n<p>属性列表不断地增长，但 大部分 React 独有的属性命名已在 DOM 中合法。移除白名单的大部分属性能够稍微减少库的大小。</p>\n</li>\n</ul>\n<p>随着新版本发布，这些问题都将解决。在 React 16 中，你可以传递自定义属性给所有的 HTML 和 SVG 元素，同时 React 也不必在将所有的属性白名单包含进生产版本里。</p>\n<p><strong>注意，对于已知属性，你仍需要使用规范的 React 命名。</strong></p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token comment">// Yes, please</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">tabIndex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment">// Warning: Invalid DOM property `tabindex`. Did you mean `tabIndex`?</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>换句话说，你在 React 中使用 DOM 组件的方式并没有改变，但现在你有了新方式。</p>\n<h2 id="应该在属性中存储数据？"><a href="#%E5%BA%94%E8%AF%A5%E5%9C%A8%E5%B1%9E%E6%80%A7%E4%B8%AD%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%EF%BC%9F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>应该在属性中存储数据？</h2>\n<p>不。我们不鼓励奖数据存放在 DOM 属性中。即使你不得不，使用 <code class="gatsby-code-text">data-</code>\n可能会是更好的方式，但大多数情况下数据应被保存在 React 组件状态或额外存储。</p>\n<p>然而，若你需要使用非标准化的或是新的 DOM 属性那新特性将会十分方便，或若你需要与依赖这些新特性的第三方库进行整合。</p>\n<h2 id="data-和-aria-属性"><a href="#data-%E5%92%8C-aria-%E5%B1%9E%E6%80%A7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Data 和 ARIA 属性</h2>\n<p>和之前一样，React 能够让你随意地传递 <code class="gatsby-code-text">data-</code> 和 <code class="gatsby-code-text">aria-</code>：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>42<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Close<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onClose<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>这并没有改变。</p>\n<p><a href="/react/docs/accessibility.html">可访问性</a> 非常重要，因此即使 React 16 能够传递任何属性，其仍然会在开发模式下验证 <code class="gatsby-code-text">aria-</code> props 是否正确命名，就像之前 React 15 一样。</p>\n<h2 id="迁移路径"><a href="#%E8%BF%81%E7%A7%BB%E8%B7%AF%E5%BE%84" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>迁移路径</h2>\n<p>自一年多前的 <a href="https://github.com/facebook/react/releases/tag/v15.2.0">React 15.2.0</a> 发布，我们已将<a href="/react/warnings/unknown-prop.html">关于未知属性的一个警告</a> 包含在内。大量的第三方库也已进行代码升级。若你的应用在 React 15.2.0 或更高版本中并未产生警告，那么这一改变并不需要修改你应用中的代码。</p>\n<p>若你仍意外地传递非 DOM props 到 DOM 组件中，在 React 16 你将会在 DOM 中开始看到这些特性，例如：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">myData</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>[Object object]<span class="token punctuation">\'</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>这在一定程度上是安全的（浏览器将会忽略他们）但当你看到他们时，我们建议你修复这些问题。一个潜在的问题是若你传递一个实现了自定义的 <code class="gatsby-code-text">toString()</code> 或 <code class="gatsby-code-text">valueOf()</code> 方法的对象将会抛出异常。另一个可能的问题是合法的 HTML 元素如 <code class="gatsby-code-text">align</code> 和 <code class="gatsby-code-text">valign</code> 现在会被传递给 DOM。它们过去则是被忽略，因为React 并不支持它们。</p>\n<p>为避免这些问题，在升级到 React 16 之前，我们建议你修复你在 React 15中看到的这些警告。</p>\n<h2 id="变更细节"><a href="#%E5%8F%98%E6%9B%B4%E7%BB%86%E8%8A%82" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>变更细节</h2>\n<p>我们已做了一些其他调整已让行为能够更加可预测并能致力于让你不犯错。我们无法预期这些改变可能会破坏实际应用。</p>\n<p><strong>这些变更仅影响 DOM 组件 如 <code class="gatsby-code-text">&lt;div&gt;</code>，而不会影响你自己的组件。</strong></p>\n<p>下列是变更的细节。</p>\n<ul>\n<li>\n<p><strong>带有字符，数字或对象值得未知属性：</strong></p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">mycustomattribute</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">mycustomattribute</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">42</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">mycustomattribute</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>myObject<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>React 15：警告并忽略。\nReact 16：将值转换成字符串并传递给组件。</p>\n<p><em>注意：以 <code class="gatsby-code-text">on</code> 开始的特性并不会被传递而是抛出异常因为这可能是一个潜在的安全漏洞。</em></p>\n</li>\n<li>\n<p><strong>带有不同规范的 React 命名的已知属性：</strong></p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hi<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>React 15：警告并忽略。\nReact 16：警告但会将其转换为字符串并传递给组件。</p>\n<p><em>注意：永远对支持的特性使用规范的 React 命名规则。</em></p>\n</li>\n<li>\n<p><strong>带有布尔值的非布尔值特性：</strong></p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>React 15：将布尔值转换为字符串并传递给组件\nReact 16：警告并忽略。</p>\n</li>\n<li>\n<p><strong>带有函数的非事件特性：</strong></p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<p>React 15：将函数转换为字符串并传递给组件。\nReact 16：警告并忽略。</p>\n</li>\n<li>\n<p><strong>带有 Symbol 的属性：</strong></p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>React 15：崩溃。\nReact 16：警告并忽略。</p>\n</li>\n<li>\n<p><strong>带有 <code class="gatsby-code-text">NaN</code> 值的属性：</strong></p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">tabIndex</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>React 15：将 <code class="gatsby-code-text">NaN</code> 转换为字符串并传递给组件。\nReact 16：警告并忽略。</p>\n</li>\n</ul>\n<p>随这一测试版的发布，我们也为所有已知元素<a href="https://github.com/facebook/react/blob/master/fixtures/attribute-behavior/AttributeTableSnapshot.md">创建一个自动生成的表单</a>以追踪潜在的问题。</p>\n<h2 id="试一试"><a href="#%E8%AF%95%E4%B8%80%E8%AF%95" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>试一试</h2>\n<p>你可以在 <a href="https://codepen.io/gaearon/pen/gxNVdP?editors=0010">CodePen</a> 尝试这些变更。其使用 React 16 RC 版本，你也可以 <a href="https://github.com/facebook/react/issues/10294">在你的项目中帮助我们测试 RC</a>。</p>\n<h2 id="感谢"><a href="#%E6%84%9F%E8%B0%A2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>感谢</h2>\n<p>这一努力大部分由一位 <a href="https://github.com/nhunzaker">Nathan Hunzaker</a> 所推动， <a href="https://github.com/facebook/react/pulls?q=is%3Apr+author%3Anhunzaker+is%3Aclosed">其是一位高产的 React 外部贡献者</a>。</p>\n<p>你可以在过去一年的历程里在下列几个 PR 的这个问题上发现他的工作：\n<a href="https://github.com/facebook/react/pull/6459">#6459</a>、<a href="https://github.com/facebook/react/pull/7311">#7311</a>、<a href="https://github.com/facebook/react/pull/10229">#10229</a>、<a href="https://github.com/facebook/react/pull/10397">#10397</a>、<a href="https://github.com/facebook/react/pull/10385">#10385</a> 和 <a href="https://github.com/facebook/react/pull/10470">#10470</a>。</p>\n<p>在一个受欢迎的项目中核心的调整需要花费大量时间和研究。Nathan 展示了坚定的决心并承诺完成这一调整，我们非常感谢他的这一工作及其他的贡献。</p>\n<p>我们也想要感谢 <a href="https://github.com/aweary">Brandon Dail</a> 和 <a href="https://github.com/jquense">Jason Quense</a> 在这一年中无私地帮助维护 React 项目。</p>\n<h2 id="未来计划"><a href="#%E6%9C%AA%E6%9D%A5%E8%AE%A1%E5%88%92" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>未来计划</h2>\n<p>我们还未调整 <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom_Elements">自定义元素</a> 如何在 React 16 中工作，但关于设置属性而非特性已经有了一些<a href="https://github.com/facebook/react/issues/7249">讨论</a>，我们可能在 React 17 中在回过头来看看。若你愿意提供帮助，随时都可以来提。</p>',excerpt:"过去，React 习惯于忽视未知的 DOM 属性。若你在 JSX 中写了一个 React 无法识别的元素， React 将会忽略他。例如这样： 在 React 15 中将会在 DOM 节点中渲染一个空的 div: 在 React 16 中，我们做了一些改变。未知特性会在 DOM 节点的末尾： 为何要改变？ React 为 DOM 提供了以 JavaScript 为核心的 API。由于 React 组件总是带有自定义以及 DOM 相关的 props，其使得 React 使用小驼峰命名会更易理解，类似于 DOM 的 API： 这并未改变。然而，过去这一方式强制我们在库中维护一个合法的 DOM 元素白名单： 这一方是有两个弊端： 你无法 传自定义属性 。而这对于未标准化的浏览器相关的属性，尝试新的DOM API以及集成一些独特的第三方库。 属性列表不断地增长，但 大部分 React 独有的属性命名已在 DOM 中合法。移除白名单的大部分属性能够稍微减少库的大小。 随着新版本发布，这些问题都将解决。在 React 16 中，你可以传递自定义属性给所有的 HTML 和 SVG…",frontmatter:{title:"DOM Attributes in React 16",next:null,prev:null,author:[{frontmatter:{name:"Dan Abramov",url:"https://twitter.com/dan_abramov"}}]},fields:{date:"September 08, 2017",path:"blog/2017-09-08-dom-attributes-in-react-16.md",slug:"/blog/2017/09/08/dom-attributes-in-react-16.html"}},allMarkdownRemark:{edges:[{node:{frontmatter:{title:"React v16.7: No, This Is Not the One With Hooks"},fields:{slug:"/blog/2018/12/19/react-v-16-7.html"}}},{node:{frontmatter:{title:"React 16.x Roadmap"},fields:{slug:"/blog/2018/11/27/react-16-roadmap.html"}}},{node:{frontmatter:{title:"React Conf recap: Hooks, Suspense, and Concurrent Rendering"},fields:{slug:"/blog/2018/11/13/react-conf-recap.html"}}},{node:{frontmatter:{title:"React v16.6.0: lazy, memo and contextType"},fields:{slug:"/blog/2018/10/23/react-v-16-6.html"}}},{node:{frontmatter:{title:"Create React App 2.0: Babel 7, Sass, and More"},fields:{slug:"/blog/2018/10/01/create-react-app-v2.html"}}},{node:{frontmatter:{title:"Introducing the React Profiler"},fields:{slug:"/blog/2018/09/10/introducing-the-react-profiler.html"}}},{node:{frontmatter:{title:"React v16.4.2: Server-side vulnerability fix"},fields:{slug:"/blog/2018/08/01/react-v-16-4-2.html"}}},{node:{frontmatter:{title:"You Probably Don't Need Derived State"},fields:{slug:"/blog/2018/06/07/you-probably-dont-need-derived-state.html"}}},{node:{frontmatter:{title:"React v16.4.0: Pointer Events"},fields:{slug:"/blog/2018/05/23/react-v-16-4.html"}}},{node:{frontmatter:{title:"React v16.3.0: New lifecycles and context API"},fields:{slug:"/blog/2018/03/29/react-v-16-3.html"}}}]}},pathContext:{slug:"/blog/2017/09/08/dom-attributes-in-react-16.html"}}}});
//# sourceMappingURL=path---blog-2017-09-08-dom-attributes-in-react-16-html-de99f0e507830de21e4a.js.map